// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateUser implements createUser operation.
//
// This can only be done by the logged in user.
//
// POST /user
func (UnimplementedHandler) CreateUser(ctx context.Context, req *CreateUserRequest) (r *User, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUsersWithListInput implements createUsersWithListInput operation.
//
// Creates list of users with given input array.
//
// POST /user/createWithList
func (UnimplementedHandler) CreateUsersWithListInput(ctx context.Context, req []User) (r *User, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// This can only be done by the logged in user.
//
// DELETE /user/{username}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUserByName implements getUserByName operation.
//
// Get user by user name.
//
// GET /user/{username}
func (UnimplementedHandler) GetUserByName(ctx context.Context, params GetUserByNameParams) (r GetUserByNameRes, _ error) {
	return r, ht.ErrNotImplemented
}

// LoginUser implements loginUser operation.
//
// Logs user into the system.
//
// GET /user/login
func (UnimplementedHandler) LoginUser(ctx context.Context, params LoginUserParams) (r LoginUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// LogoutUser implements logoutUser operation.
//
// Logs out current logged in user session.
//
// GET /user/logout
func (UnimplementedHandler) LogoutUser(ctx context.Context) error {
	return ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// This can only be done by the logged in user.
//
// PUT /user/{username}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req UpdateUserReq, params UpdateUserParams) error {
	return ht.ErrNotImplemented
}

// NewError creates *DefaultStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *DefaultStatusCode) {
	r = new(DefaultStatusCode)
	return r
}
